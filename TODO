General TODO
============
1) Try to use for real world uses
2) Write tests based on failures
3) Make tests pass
4) Repeat
5) Parallelize over equal priorities
6) Add tests!

Specific TODO resulting from #1 above
=====================================
1) inline ansible plans (status: created system file for testing)
  problem: it's a bit more tedious than it needs to be to use files because you
           end up having to reference an ansible file to do anything interesting
  solution: inline ansible stanzas in plan files (and system files)
2) I'd like it if the hosts line was optional in the ansible stanzas (NOTE: it might actually be...need to test it)
3) Files sections in plans lists need to have parameter capability so that I can define key/val pairs that apply to every file in the list (status: created system file for testing)

Tests
=====
1) scripts that can run remotely
2) scripts that run locally
3) scripts that run locally against pre-defined input (`ps auxwww`, `dpkg -l`, etc)
4) simple checks for the presence of a file, something listening on a port, a port being open to the local machine